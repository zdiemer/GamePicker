from typing import Dict, List, Optional, Tuple

from excel_game import ExcelPlatform
from game_grouping import GameGrouping
from game_selector import GameSelector

COMPANY_PLATFORMS: Dict[str, List[ExcelPlatform]] = {
    "Panasonic": [ExcelPlatform._3DO],
    "The 3DO Company": [ExcelPlatform._3DO],
    "Acorn": [
        ExcelPlatform.ACORN_ARCHIMEDES,
        ExcelPlatform.ACORN_ATOM,
        ExcelPlatform.ACORN_ELECTRON,
        ExcelPlatform.RISC_PC,
    ],
    "Worlds of Wonder": [ExcelPlatform.ACTION_MAX],
    "Amazon": [ExcelPlatform.AMAZON_FIRE_TV],
    "Amstrad": [ExcelPlatform.AMSTRAD_CPC, ExcelPlatform.AMSTRAD_PCW],
    "Google": [ExcelPlatform.ANDROID, ExcelPlatform.GOOGLE_STADIA],
    "Apple": [
        ExcelPlatform.APPLE_II,
        ExcelPlatform.APPLE_IIGS,
        ExcelPlatform.IOS,
        ExcelPlatform.TVOS,
        ExcelPlatform.WATCHOS,
        ExcelPlatform.BANDAI_PIPPIN,
    ],
    "Bandai": [
        ExcelPlatform.ARCADIA_2001,
        ExcelPlatform.BANDAI_PIPPIN,
        ExcelPlatform.PLAYDIA,
        ExcelPlatform.WONDERSWAN,
        ExcelPlatform.WONDERSWAN_COLOR,
    ],
    "Atari": [
        ExcelPlatform.ATARI_2600,
        ExcelPlatform.ATARI_5200,
        ExcelPlatform.ATARI_7800,
        ExcelPlatform.ATARI_8_BIT,
        ExcelPlatform.ATARI_JAGUAR,
        ExcelPlatform.ATARI_JAGUAR_CD,
        ExcelPlatform.ATARI_LYNX,
        ExcelPlatform.ATARI_ST,
    ],
    "Nintendo": [
        ExcelPlatform.BS_X,
        ExcelPlatform.DSIWARE,
        ExcelPlatform.E_READER,
        ExcelPlatform.FAMICOM_DISK_SYSTEM,
        ExcelPlatform.GAME_BOY,
        ExcelPlatform.GAME_BOY_ADVANCE,
        ExcelPlatform.GAME_BOY_COLOR,
        ExcelPlatform.NES,
        ExcelPlatform.NEW_NINTENDO_3DS,
        ExcelPlatform.NINTENDO_3DS,
        ExcelPlatform.NINTENDO_64,
        ExcelPlatform.NINTENDO_64DD,
        ExcelPlatform.NINTENDO_DS,
        ExcelPlatform.NINTENDO_DSI,
        ExcelPlatform.NINTENDO_GAMECUBE,
        ExcelPlatform.NINTENDO_POKEMON_MINI,
        ExcelPlatform.NINTENDO_SWITCH,
        ExcelPlatform.NINTENDO_WII,
        ExcelPlatform.NINTENDO_WII_U,
        ExcelPlatform.SNES,
        ExcelPlatform.VIRTUAL_BOY,
        ExcelPlatform.WIIWARE,
    ],
    "Casio": [ExcelPlatform.CASIO_LOOPY],
    "Coleco": [ExcelPlatform.COLECO_ADAM, ExcelPlatform.COLECOVISION],
    "Commodore": [
        ExcelPlatform.COMMODORE_64,
        ExcelPlatform.COMMODORE_AMIGA,
        ExcelPlatform.COMMODORE_AMIGA_CD32,
        ExcelPlatform.COMMODORE_PET,
        ExcelPlatform.COMMODORE_PLUS_4,
        ExcelPlatform.COMMODORE_VIC_20,
    ],
    "Epoch": [ExcelPlatform.EPOCH_SUPER_CASSETTE_VISION],
    "Evercade": [ExcelPlatform.EVERCADE],
    "Blaze": [ExcelPlatform.EVERCADE],
    "Exidy": [ExcelPlatform.EXIDY_SORCERER],
    "Fujitsu": [ExcelPlatform.FM_TOWNS, ExcelPlatform.FM_7],
    "Tiger": [ExcelPlatform.GAME_COM],
    "GamePark": [ExcelPlatform.GAMEPARK_32, ExcelPlatform.GP2X_WIZ],
    "Gizmondo": [ExcelPlatform.GIZMONDO],
    "Hartung": [ExcelPlatform.HARTUNG_GAME_MASTER],
    "Mattel": [
        ExcelPlatform.HYPERSCAN,
        ExcelPlatform.INTELLIVISION,
        ExcelPlatform.MATTEL_AQUARIUS,
    ],
    "Magnavox": [ExcelPlatform.MAGNAVOX_ODYSSEY_2],
    "Milton Bradley": [ExcelPlatform.MICROVISION, ExcelPlatform.VECTREX],
    "Microsoft": [
        ExcelPlatform.MSX,
        ExcelPlatform.MSX2,
        ExcelPlatform.MSX_TURBO_R,
        ExcelPlatform.WINDOWS_MOBILE,
        ExcelPlatform.WINDOWS_PHONE,
        ExcelPlatform.XBOX,
        ExcelPlatform.XBOX_360,
        ExcelPlatform.XBOX_ONE,
        ExcelPlatform.XBOX_SERIES_X_S,
    ],
    "Nokia": [ExcelPlatform.N_GAGE, ExcelPlatform.N_GAGE_2_0, ExcelPlatform.SYMBIAN],
    "NEC": [
        ExcelPlatform.NEC_PC_6001,
        ExcelPlatform.NEC_PC_8801,
        ExcelPlatform.NEC_PC_9801,
        ExcelPlatform.PC_FX,
        ExcelPlatform.SUPERGRAFX,
        ExcelPlatform.TURBOGRAFX_16,
        ExcelPlatform.TURBOGRAFX_CD,
    ],
    "SNK": [
        ExcelPlatform.NEO_GEO,
        ExcelPlatform.NEO_GEO_CD,
        ExcelPlatform.NEO_GEO_POCKET,
        ExcelPlatform.NEO_GEO_POCKET_COLOR,
    ],
    "VMLabs": [ExcelPlatform.NUON],
    "Oculus": [ExcelPlatform.OCULUS_QUEST],
    "Meta": [ExcelPlatform.OCULUS_QUEST],
    "Oric": [ExcelPlatform.ORIC],
    "Philips": [ExcelPlatform.PHILIPS_CD_I],
    "Pioneer": [ExcelPlatform.PIONEER_LASERACTIVE],
    "Panic": [ExcelPlatform.PLAYDATE],
    "Sony": [
        ExcelPlatform.PLAYSTATION,
        ExcelPlatform.PLAYSTATION_2,
        ExcelPlatform.PLAYSTATION_3,
        ExcelPlatform.PLAYSTATION_4,
        ExcelPlatform.PLAYSTATION_5,
        ExcelPlatform.PLAYSTATION_NETWORK,
        ExcelPlatform.PLAYSTATION_PORTABLE,
        ExcelPlatform.PLAYSTATION_VITA,
    ],
    "Sega": [
        ExcelPlatform.SEGA_32X,
        ExcelPlatform.SEGA_CD,
        ExcelPlatform.SEGA_DREAMCAST,
        ExcelPlatform.SEGA_GAME_GEAR,
        ExcelPlatform.SEGA_GENESIS,
        ExcelPlatform.SEGA_MASTER_SYSTEM,
        ExcelPlatform.SEGA_PICO,
        ExcelPlatform.SEGA_SATURN,
        ExcelPlatform.SEGA_SG_1000,
    ],
    "Sharp": [ExcelPlatform.SHARP_X1, ExcelPlatform.SHARP_X68000],
    "Hudson": [
        ExcelPlatform.SUPERGRAFX,
        ExcelPlatform.TURBOGRAFX_16,
        ExcelPlatform.TURBOGRAFX_CD,
    ],
    "Tapwave": [ExcelPlatform.TAPWAVE_ZODIAC],
    "Timetop": [ExcelPlatform.TIMETOP_GAMEKING, ExcelPlatform.TIMETOP_GAMEKING_III],
    "Tandy": [ExcelPlatform.TRS_80_COLOR_COMPUTER],
    "GCE": [ExcelPlatform.VECTREX],
    "Watara": [ExcelPlatform.WATARA_SUPERVISION],
    "Xbox": [
        ExcelPlatform.WINDOWS_MOBILE,
        ExcelPlatform.WINDOWS_PHONE,
        ExcelPlatform.XBOX,
        ExcelPlatform.XBOX_360,
        ExcelPlatform.XBOX_ONE,
        ExcelPlatform.XBOX_SERIES_X_S,
    ],
    "Zeebo": [ExcelPlatform.ZEEBO],
    "Sinclair": [ExcelPlatform.ZX_SPECTRUM],
}


def find_publisher_platforms(
    publisher: str,
) -> Tuple[Optional[str], List[ExcelPlatform]]:
    for platform_publisher, platforms in COMPANY_PLATFORMS.items():
        if platform_publisher in publisher:
            return (platform_publisher, platforms)

    return (None, [])


FIRST_PARTY_GAMES = GameSelector(
    _filter=lambda g: g.platform in find_publisher_platforms(g.publisher)[1],
    name="First Party Games",
    include_platform=False,
    grouping=GameGrouping(
        lambda g: find_publisher_platforms(g.publisher)[0],
        subgroupings=[GameGrouping()],
    ),
)
